name: CI

on:
  push:
    branches: ["koyeb-fork"]

env:
  GOOS: linux

  # Required to push on the GCP core registry
  WORKLOAD_ID: ${{ secrets.REGISTRY_WORKLOAD_ID }}
  WORKLOAD_POOL_ID: ${{ secrets.REGISTRY_WORKLOAD_POOL_ID }}
  WORKLOAD_POOL_PROVIDER_ID: ${{ secrets.REGISTRY_WORKLOAD_POOL_PROVIDER_ID }}
  GCP_CORE_PROJECT_ID: ${{ secrets.REGISTRY_GCP_PROJECT_ID }}
  REGISTRY_URL: ${{ secrets.REGISTRY_URL }}
  SERVICE_ACCOUNT_ID: ${{ secrets.REGISTRY_SERVICE_ACCOUNT_ID }}

jobs:
  build-publish:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.21.3"
      - name: set git config
        run: |
          git config --global "url.https://${{ secrets.GH_TOKEN }}:x-oauth-basic@github.com".insteadOf "https://github.com"
      - name: Seed env
        run: |
          echo $GITHUB_SHA | awk '{ printf "BUILD_INFO_VERSION=0.0.0-preview.v%.9s-amd64\n", $1 }' >> $GITHUB_ENV
          basename $GITHUB_REF | awk '{ printf "BRANCH_NAME=%s\n", $1 }' >> $GITHUB_ENV
      # Push images on the GCP core registry
      - name: Set environment variable for the core GCP registry
        run: |
          echo "SERVICE_ACCOUNT=$SERVICE_ACCOUNT_ID@$GCP_CORE_PROJECT_ID.iam.gserviceaccount.com" >> $GITHUB_ENV
          echo "WORKLOAD_IDENTITY_PROVIDER=projects/$WORKLOAD_ID/locations/global/workloadIdentityPools/$WORKLOAD_POOL_ID/providers/$WORKLOAD_POOL_PROVIDER_ID" >> $GITHUB_ENV
      - id: core-auth
        name: Authenticate with Google Cloud for the GCP core registry
        uses: google-github-actions/auth@v0
        with:
          token_format: access_token
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          access_token_lifetime: 300s
      - name: Login to Artifact Registry for the GCP core registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: oauth2accesstoken
          password: ${{ steps.core-auth.outputs.access_token }}
      - name: Build and push the images on the GCP core registry
        run: |
          make build/coredns
          for i in kuma-cp kuma-dp kumactl; do
            make build/${i}
            DOCKER_REGISTRY=${REGISTRY_URL} make image/${i}/amd64
            BUILT_IMAGE=$REGISTRY_URL/$i:$BUILD_INFO_VERSION
            CORE_IMAGE=$REGISTRY_URL/$GCP_CORE_PROJECT_ID/koyeb/${i}-v2

            docker tag $BUILT_IMAGE $CORE_IMAGE:$BUILD_INFO_VERSION
            docker tag $BUILT_IMAGE $CORE_IMAGE:$BRANCH_NAME
            docker tag $BUILT_IMAGE $CORE_IMAGE:latest
            docker push $CORE_IMAGE:$BUILD_INFO_VERSION
            docker push $CORE_IMAGE:$BRANCH_NAME
            docker push $CORE_IMAGE:latest
          done
